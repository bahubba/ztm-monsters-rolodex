{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","Searchbox","placeholder","changeHandler","type","onChange","App","componentDidMount","fetch","then","response","json","users","setState","filterFreaks","value","target","searchField","render","state","freaks","searchTxt","filteredFreaks","filter","freak","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qTAIaA,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEP,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCLPC,G,MAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OAAO,qBAAKP,UAAU,YAAf,SAECO,EAASC,KAAI,SAAAT,GAAO,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCNtBM,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACpC,OACI,8BACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCmCXG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAQFC,kBAAoB,WAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACd,SAAUa,QAZ5B,EAedE,aAAe,YAAwB,IAAbC,EAAY,EAArBC,OAASD,MACxB,EAAKF,SAAS,CAACI,YAAaF,KAhBhB,EAmBdG,OAAS,WAAO,IAAD,EACoC,EAAKC,MAAtCC,EADH,EACNrB,SAA6BsB,EADvB,EACWJ,YAClBK,EAAiBF,EAAOG,QAAO,SAAAC,GAAK,OACxCA,EAAM5B,KAAK6B,cAAcC,SAASL,EAAUI,kBAG9C,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,cAAe,EAAKW,eAEtB,cAAC,EAAD,CAAUf,SAAUuB,QA7BxB,EAAKH,MAAQ,CACXpB,SAAW,GACXkB,YAAa,IALH,E,UADEU,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ce7f75ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = ({monster}) => {\r\n    return <div className=\"card-container\">\r\n        <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{monster.name}</h2>\r\n        <p>{monster.email}</p>\r\n    </div>\r\n}","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = ({monsters}) => {\r\n    return <div className='card-list'>\r\n        {\r\n            monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/> \r\n            ))\r\n        }\r\n    </div>\r\n}","import React from 'react';\r\n\r\nimport './searchbox.styles.css';\r\n\r\nexport const Searchbox = ({placeholder, changeHandler}) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"search\"\r\n                type=\"search\"\r\n                placeholder={placeholder}\r\n                onChange={changeHandler}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {Searchbox} from './components/searchbox/searchbox.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  filterFreaks = ({target: {value}}) => {\n    this.setState({searchField: value});\n  }\n\n  render = () => {\n    const {monsters:freaks, searchField:searchTxt} = this.state;\n    const filteredFreaks = freaks.filter(freak => \n      freak.name.toLowerCase().includes(searchTxt.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox \n          placeholder=\"search monsters\"\n          changeHandler={this.filterFreaks}\n        />\n        <CardList monsters={filteredFreaks}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}